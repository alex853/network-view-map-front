# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/map

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle build
      
      - store_artifacts:
          path: build/libs/

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      #- run: gradle test
      - add_ssh_keys
#          fingerprints:
#            - "${SSH_FINGERPRINT}"

      #- run: ssh-keyscan -H ${SSH_SERVER} >> ~/.ssh/known_hosts
      - run:
          name: Deploy Over SSH
          command: |
            echo '${SSH_KNOWN_HOST}' >> ~/.ssh/known_hosts
            scp -P ${SSH_PORT} -r build/libs/ ${SSH_USER}@${SSH_HOST}:/

# -o StrictHostKeyChecking=no 
#  deploy:
#    docker:
#      - image: circleci/openjdk:8-jdk
#    steps:
#      - run:
#          name: Deploy Over SSH
#          command: scp -r circle-pushing/* username@my-server:/path-to-put-files-on-server/
